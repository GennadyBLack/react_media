{"ast":null,"code":"import _defineProperty from \"/home/gena/app/react_media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/gena/app/react_media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gena/app/react_media/src/node_modules/pages/settings/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { CurrentUserContext } from 'contexts/currentUser';\nimport useFetch from 'hooks/useFetch';\nimport BackendErrorMessages from 'components/backendErrorMessages';\nimport useLocalStorage from 'hooks/useLocalStorage';\n\nconst Settings = () => {\n  const apiUrl = '/user';\n\n  const _useFetch = useFetch(apiUrl),\n        _useFetch2 = _slicedToArray(_useFetch, 2),\n        _useFetch2$ = _useFetch2[0],\n        response = _useFetch2$.response,\n        error = _useFetch2$.error,\n        doFetch = _useFetch2[1];\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        image = _useState4[0],\n        setImage = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bio = _useState6[0],\n        setBio = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        email = _useState8[0],\n        setEmail = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        password = _useState10[0],\n        setPassword = _useState10[1];\n\n  const _useContext = useContext(CurrentUserContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        currentUserState = _useContext2[0],\n        dispatch = _useContext2[1];\n\n  const _useLocalStorage = useLocalStorage('token'),\n        _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n        setToken = _useLocalStorage2[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        successfullLogout = _useState12[0],\n        setIsSuccessfullLogout = _useState12[1];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    doFetch({\n      method: 'put',\n      data: {\n        user: _objectSpread({}, currentUserState.currentUser, {\n          image,\n          bio,\n          username: name,\n          email,\n          password\n        })\n      }\n    });\n  };\n\n  const logout = event => {\n    event.preventDefault();\n    setToken('');\n    dispatch({\n      type: 'SET_UNAUTHORIZED'\n    });\n    setIsSuccessfullLogout(true);\n  };\n\n  useEffect(() => {\n    if (!currentUserState.currentUser) {\n      return;\n    }\n\n    const currentUser = currentUserState.currentUser;\n    setName(currentUser.username);\n    setImage(currentUser.image);\n    setBio(currentUser.bio);\n    setEmail(currentUser.email);\n  }, [currentUserState.currentUser]);\n  useEffect(() => {\n    if (!response) {\n      return;\n    }\n\n    dispatch({\n      type: 'SET_AUTHORIZED',\n      payload: response.user\n    });\n  }, [response, dispatch]);\n\n  if (successfullLogout) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"settings-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 offset-md-3 col-xs-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-xs-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Your settings\"), error && React.createElement(BackendErrorMessages, {\n    backendErrors: error.errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control form-control-lg\",\n    placeholder: \"URL of profile picture\",\n    value: image,\n    onChange: e => setImage(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"fieldset\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control form-control-lg\",\n    placeholder: \"Username\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"fieldset\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    type: \"text\",\n    className: \"form-control form-control-lg\",\n    placeholder: \"Short bio\",\n    value: bio,\n    rows: \"8\",\n    onChange: e => setBio(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(\"fieldset\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control form-control-lg\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(\"fieldset\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control form-control-lg\",\n    placeholder: \"New password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-lg btn-primary pull-xs-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Update settings\"))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-outline-danger\",\n    onClick: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Or click here to logout.\")))));\n};\n\nexport default Settings;","map":{"version":3,"sources":["/home/gena/app/react_media/src/node_modules/pages/settings/index.js"],"names":["React","useState","useContext","useEffect","Redirect","CurrentUserContext","useFetch","BackendErrorMessages","useLocalStorage","Settings","apiUrl","response","error","doFetch","name","setName","image","setImage","bio","setBio","email","setEmail","password","setPassword","currentUserState","dispatch","setToken","successfullLogout","setIsSuccessfullLogout","handleSubmit","event","preventDefault","method","data","user","currentUser","username","logout","type","payload","errors","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\nimport {Redirect} from 'react-router-dom'\n\nimport {CurrentUserContext} from 'contexts/currentUser'\nimport useFetch from 'hooks/useFetch'\nimport BackendErrorMessages from 'components/backendErrorMessages'\nimport useLocalStorage from 'hooks/useLocalStorage'\n\nconst Settings = () => {\n  const apiUrl = '/user'\n  const [{response, error}, doFetch] = useFetch(apiUrl)\n  const [name, setName] = useState('')\n  const [image, setImage] = useState('')\n  const [bio, setBio] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [currentUserState, dispatch] = useContext(CurrentUserContext)\n  const [, setToken] = useLocalStorage('token')\n  const [successfullLogout, setIsSuccessfullLogout] = useState(false)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    doFetch({\n      method: 'put',\n      data: {\n        user: {\n          ...currentUserState.currentUser,\n          image,\n          bio,\n          username: name,\n          email,\n          password\n        }\n      }\n    })\n  }\n  const logout = event => {\n    event.preventDefault()\n    setToken('')\n    dispatch({type: 'SET_UNAUTHORIZED'})\n    setIsSuccessfullLogout(true)\n  }\n\n  useEffect(() => {\n    if (!currentUserState.currentUser) {\n      return\n    }\n    const currentUser = currentUserState.currentUser\n\n    setName(currentUser.username)\n    setImage(currentUser.image)\n    setBio(currentUser.bio)\n    setEmail(currentUser.email)\n  }, [currentUserState.currentUser])\n\n  useEffect(() => {\n    if (!response) {\n      return\n    }\n\n    dispatch({type: 'SET_AUTHORIZED', payload: response.user})\n  }, [response, dispatch])\n\n  if (successfullLogout) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <div className=\"settings-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">Your settings</h1>\n            {error && <BackendErrorMessages backendErrors={error.errors} />}\n            <form onSubmit={handleSubmit}>\n              <fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"URL of profile picture\"\n                    value={image}\n                    onChange={e => setImage(e.target.value)}\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Username\"\n                    value={name}\n                    onChange={e => setName(e.target.value)}\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <textarea\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Short bio\"\n                    value={bio}\n                    rows=\"8\"\n                    onChange={e => setBio(e.target.value)}\n                  ></textarea>\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"New password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                  />\n                </fieldset>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\n                >\n                  Update settings\n                </button>\n              </fieldset>\n            </form>\n            <hr />\n            <button className=\"btn btn-outline-danger\" onClick={logout}>\n              Or click here to logout.\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}