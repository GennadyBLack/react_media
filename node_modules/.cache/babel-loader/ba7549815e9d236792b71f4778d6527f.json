{"ast":null,"code":"import _slicedToArray from \"/home/gena/app/react_media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gena/app/react_media/src/node_modules/pages/createArticle/index.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ArticleForm from 'components/articleForm';\nimport useFetch from 'hooks/useFetch';\nimport { CurrentUserContext } from 'contexts/currentUser';\n\nconst CreateArticle = () => {\n  const apiUrl = '/articles';\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isSuccessfullSubmit = _useState2[0],\n        setIsSuccessfullSubmit = _useState2[1];\n\n  const _useFetch = useFetch(apiUrl),\n        _useFetch2 = _slicedToArray(_useFetch, 2),\n        _useFetch2$ = _useFetch2[0],\n        response = _useFetch2$.response,\n        error = _useFetch2$.error,\n        doFetch = _useFetch2[1];\n\n  const _useContext = useContext(CurrentUserContext),\n        _useContext2 = _slicedToArray(_useContext, 1),\n        currentUserState = _useContext2[0];\n\n  const onSubmit = article => {\n    doFetch({\n      method: 'post',\n      data: {\n        article\n      }\n    });\n  };\n\n  const initialValues = {\n    title: '',\n    description: '',\n    body: '',\n    tagList: ''\n  };\n  useEffect(() => {\n    if (!response) {\n      return;\n    }\n\n    setIsSuccessfullSubmit(true);\n  }, [response]);\n\n  if (currentUserState.isLoggedIn === null) {\n    return null;\n  }\n\n  if (isSuccessfullSubmit || currentUserState.isLoggedIn === false) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(ArticleForm, {\n    onSubmit: onSubmit,\n    initialValues: initialValues,\n    errors: error && error.errors || {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport default CreateArticle;","map":{"version":3,"sources":["/home/gena/app/react_media/src/node_modules/pages/createArticle/index.js"],"names":["React","useState","useEffect","useContext","Redirect","ArticleForm","useFetch","CurrentUserContext","CreateArticle","apiUrl","isSuccessfullSubmit","setIsSuccessfullSubmit","response","error","doFetch","currentUserState","onSubmit","article","method","data","initialValues","title","description","body","tagList","isLoggedIn","errors"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAAQC,kBAAR,QAAiC,sBAAjC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,MAAM,GAAG,WAAf;;AAD0B,oBAE4BR,QAAQ,CAAC,KAAD,CAFpC;AAAA;AAAA,QAEnBS,mBAFmB;AAAA,QAEEC,sBAFF;;AAAA,oBAGWL,QAAQ,CAACG,MAAD,CAHnB;AAAA;AAAA;AAAA,QAGlBG,QAHkB,eAGlBA,QAHkB;AAAA,QAGRC,KAHQ,eAGRA,KAHQ;AAAA,QAGAC,OAHA;;AAAA,sBAICX,UAAU,CAACI,kBAAD,CAJX;AAAA;AAAA,QAInBQ,gBAJmB;;AAM1B,QAAMC,QAAQ,GAAGC,OAAO,IAAI;AAC1BH,IAAAA,OAAO,CAAC;AACNI,MAAAA,MAAM,EAAE,MADF;AAENC,MAAAA,IAAI,EAAE;AACJF,QAAAA;AADI;AAFA,KAAD,CAAP;AAMD,GAPD;;AAQA,QAAMG,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAE,EADa;AAEpBC,IAAAA,WAAW,EAAE,EAFO;AAGpBC,IAAAA,IAAI,EAAE,EAHc;AAIpBC,IAAAA,OAAO,EAAE;AAJW,GAAtB;AAOAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,QAAL,EAAe;AACb;AACD;;AACDD,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,GALQ,EAKN,CAACC,QAAD,CALM,CAAT;;AAOA,MAAIG,gBAAgB,CAACU,UAAjB,KAAgC,IAApC,EAA0C;AACxC,WAAO,IAAP;AACD;;AAED,MAAIf,mBAAmB,IAAIK,gBAAgB,CAACU,UAAjB,KAAgC,KAA3D,EAAkE;AAChE,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAET,QADZ;AAEE,IAAA,aAAa,EAAEI,aAFjB;AAGE,IAAA,MAAM,EAAGP,KAAK,IAAIA,KAAK,CAACa,MAAhB,IAA2B,EAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD,CA7CD;;AA+CA,eAAelB,aAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport {Redirect} from 'react-router-dom'\n\nimport ArticleForm from 'components/articleForm'\nimport useFetch from 'hooks/useFetch'\nimport {CurrentUserContext} from 'contexts/currentUser'\n\nconst CreateArticle = () => {\n  const apiUrl = '/articles'\n  const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false)\n  const [{response, error}, doFetch] = useFetch(apiUrl)\n  const [currentUserState] = useContext(CurrentUserContext)\n\n  const onSubmit = article => {\n    doFetch({\n      method: 'post',\n      data: {\n        article\n      }\n    })\n  }\n  const initialValues = {\n    title: '',\n    description: '',\n    body: '',\n    tagList: ''\n  }\n\n  useEffect(() => {\n    if (!response) {\n      return\n    }\n    setIsSuccessfullSubmit(true)\n  }, [response])\n\n  if (currentUserState.isLoggedIn === null) {\n    return null\n  }\n\n  if (isSuccessfullSubmit || currentUserState.isLoggedIn === false) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <div>\n      <ArticleForm\n        onSubmit={onSubmit}\n        initialValues={initialValues}\n        errors={(error && error.errors) || {}}\n      />\n    </div>\n  )\n}\n\nexport default CreateArticle\n"]},"metadata":{},"sourceType":"module"}