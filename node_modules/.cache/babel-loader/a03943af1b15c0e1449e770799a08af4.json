{"ast":null,"code":"import _slicedToArray from \"/home/gena/app/react_media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gena/app/react_media/src/node_modules/pages/userProfile/components/userArticles.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { stringify } from 'query-string';\nimport { getPaginator, limit } from 'utils';\nimport useFetch from 'hooks/useFetch';\nimport Loading from 'components/loading';\nimport ErrorMessage from 'components/errorMessage';\nimport Feed from 'components/feed';\nimport Contacts from 'components/feed';\nimport Pagination from 'components/pagination';\n\nconst getApiUrl = ({\n  username,\n  offset,\n  isFavorites\n}) => {\n  const params = isFavorites ? {\n    limit,\n    offset,\n    favorited: username\n  } : {\n    limit,\n    offset,\n    author: username\n  };\n  return \"/articles?\".concat(stringify(params));\n};\n\nconst UserArticles = ({\n  username,\n  location,\n  url\n}) => {\n  const isFavorites = location.pathname.includes('favorites');\n\n  const _getPaginator = getPaginator(location.search),\n        offset = _getPaginator.offset,\n        currentPage = _getPaginator.currentPage;\n\n  const apiUrl = getApiUrl({\n    username,\n    offset,\n    isFavorites\n  });\n\n  const _useFetch = useFetch(apiUrl),\n        _useFetch2 = _slicedToArray(_useFetch, 2),\n        _useFetch2$ = _useFetch2[0],\n        response = _useFetch2$.response,\n        isLoading = _useFetch2$.isLoading,\n        error = _useFetch2$.error,\n        doFetch = _useFetch2[1];\n\n  const isContacts = location.pathname.includes('contacts');\n  useEffect(() => {\n    doFetch();\n  }, [doFetch, isFavorites, currentPage, isContacts]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, isLoading && React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), error && React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), isContacts && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Contacts, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), !isLoading && response && !isContacts && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Feed, {\n    articles: response.articles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Pagination, {\n    total: response.articlesCount,\n    limit: limit,\n    url: url,\n    currentPage: currentPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })));\n};\n\nexport default UserArticles;","map":{"version":3,"sources":["/home/gena/app/react_media/src/node_modules/pages/userProfile/components/userArticles.js"],"names":["React","useEffect","Fragment","stringify","getPaginator","limit","useFetch","Loading","ErrorMessage","Feed","Contacts","Pagination","getApiUrl","username","offset","isFavorites","params","favorited","author","UserArticles","location","url","pathname","includes","search","currentPage","apiUrl","response","isLoading","error","doFetch","isContacts","articles","articlesCount"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,cAAxB;AAEA,SAAQC,YAAR,EAAsBC,KAAtB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA;AAAnB,CAAD,KAAqC;AACrD,QAAMC,MAAM,GAAGD,WAAW,GACtB;AACEV,IAAAA,KADF;AAEES,IAAAA,MAFF;AAGEG,IAAAA,SAAS,EAAEJ;AAHb,GADsB,GAMtB;AACER,IAAAA,KADF;AAEES,IAAAA,MAFF;AAGEI,IAAAA,MAAM,EAAEL;AAHV,GANJ;AAWA,6BAAoBV,SAAS,CAACa,MAAD,CAA7B;AACD,CAbD;;AAeA,MAAMG,YAAY,GAAG,CAAC;AAACN,EAAAA,QAAD;AAAWO,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAA+B;AAClD,QAAMN,WAAW,GAAGK,QAAQ,CAACE,QAAT,CAAkBC,QAAlB,CAA2B,WAA3B,CAApB;;AADkD,wBAEpBnB,YAAY,CAACgB,QAAQ,CAACI,MAAV,CAFQ;AAAA,QAE3CV,MAF2C,iBAE3CA,MAF2C;AAAA,QAEnCW,WAFmC,iBAEnCA,WAFmC;;AAGlD,QAAMC,MAAM,GAAGd,SAAS,CAAC;AAACC,IAAAA,QAAD;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,GAAD,CAAxB;;AAHkD,oBAIFT,QAAQ,CAACoB,MAAD,CAJN;AAAA;AAAA;AAAA,QAI1CC,QAJ0C,eAI1CA,QAJ0C;AAAA,QAIhCC,SAJgC,eAIhCA,SAJgC;AAAA,QAIrBC,KAJqB,eAIrBA,KAJqB;AAAA,QAIbC,OAJa;;AAKlD,QAAMC,UAAU,GAAGX,QAAQ,CAACE,QAAT,CAAkBC,QAAlB,CAA2B,UAA3B,CAAnB;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACA,OAAD,EAAUf,WAAV,EAAuBU,WAAvB,EAAmCM,UAAnC,CAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SAAS,IAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,EAEGC,KAAK,IAAI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFZ,EAGGE,UAAU,IAAK,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACZ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,CAHlB,EASG,CAACH,SAAD,IAAcD,QAAd,IAA0B,CAACI,UAA3B,IACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEJ,QAAQ,CAACK,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEL,QAAQ,CAACM,aADlB;AAEE,IAAA,KAAK,EAAE5B,KAFT;AAGE,IAAA,GAAG,EAAEgB,GAHP;AAIE,IAAA,WAAW,EAAEI,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVJ,CADF;AAuBD,CAlCD;;AAoCA,eAAeN,YAAf","sourcesContent":["import React, {useEffect, Fragment} from 'react'\nimport {stringify} from 'query-string'\n\nimport {getPaginator, limit} from 'utils'\nimport useFetch from 'hooks/useFetch'\nimport Loading from 'components/loading'\nimport ErrorMessage from 'components/errorMessage'\nimport Feed from 'components/feed'\nimport Contacts from 'components/feed'\nimport Pagination from 'components/pagination'\n\nconst getApiUrl = ({username, offset, isFavorites}) => {\n  const params = isFavorites\n    ? {\n        limit,\n        offset,\n        favorited: username\n      }\n    : {\n        limit,\n        offset,\n        author: username\n      }\n  return `/articles?${stringify(params)}`\n}\n\nconst UserArticles = ({username, location, url}) => {\n  const isFavorites = location.pathname.includes('favorites')\n  const {offset, currentPage} = getPaginator(location.search)\n  const apiUrl = getApiUrl({username, offset, isFavorites})\n  const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n  const isContacts = location.pathname.includes('contacts')\n\n  useEffect(() => {\n    doFetch()\n  }, [doFetch, isFavorites, currentPage,isContacts])\n\n  return (\n    <div>\n      {isLoading && <Loading />}\n      {error && <ErrorMessage />}\n      {isContacts && (<Fragment>\n          <Contacts/>\n        </Fragment>\n        )}\n\n\n      {!isLoading && response && !isContacts && (\n        <Fragment>\n          <Feed articles={response.articles} />\n          <Pagination\n            total={response.articlesCount}\n            limit={limit}\n            url={url}\n            currentPage={currentPage}\n          />\n        </Fragment>\n      )}\n    </div>\n  )\n}\n\nexport default UserArticles\n"]},"metadata":{},"sourceType":"module"}